:root {
    /* vars */
    color-scheme: light!important;
    --shadow-color: var(--fg);
    --active-color: #3880f6;
}


button[popovertarget] {
    
    anchor-name: --anchor-contrast;
    --outline-color: #e8e8e8;
    
    border-radius: 100vw;
    background: white;
    border: none;
    outline: none;
    box-shadow:
        inset 0 0 0 1px #ddd,
        0 1px 1px -1px #aaa,
        0 0 0 4px var(--outline-color),
        0 0 50px 10px hsl( from var(--bg) h s 100% ),
        0 0 70px 50px hsl( from var(--bg) h s 98% ),
        0 0 100px 75px hsl( from var(--bg) h s 96% );
    
    padding: 0.66em 1.33em;
    margin: clamp( 3em, 30vh, 30em ) 0 auto;
    transition: box-shadow 0.15s var(--cubic-out);
    
    &:focus-visible {
        --outline-color: var(--active-color);
    }
    
    & svg {
        height: 30px;
        scale: -1 1;
        transition: translate 0.15s var(--cubic-out);
        transform: translate3d(0,0,0.01px);
    }
    
    &:has(+ :popover-open) {
        background: hsl( from var(--bg) h s 94% );
        box-shadow:
            inset 0 0 0 1px #ddd,
            inset 0 1px 2px -1px hsl( from var(--bg) h s 50% / 50% ),
            0 0 0 4px #e8e8e8,
            0 0 50px 10px hsl( from var(--bg) h s 100% ),
            0 0 70px 50px hsl( from var(--bg) h s 98% ),
            0 0 100px 75px hsl( from var(--bg) h s 96% );
        
        & svg {
            translate: 0 1px;
        }
    }
}

#contrast-popover {
    
    transition: 
        opacity 0.2s, 
        translate 0.2s, 
        overlay 0.2s allow-discrete,
        display 0.2s allow-discrete;
    transition-timing-function: var(--cubic-out);
    
    opacity: 0;
    translate: 10px -60%;
    @supports (position-anchor: --anchor-contrast) {
        position-anchor: --anchor-contrast;
        top: anchor(--anchor-contrast center);
        left: anchor(--anchor-contrast right);
        translate: 10px -60%;
    }
    @supports not (position-anchor: --anchor-contrast) {
        left: calc( 50% + 55px );
        top: calc( clamp( 3em, 30vh, 30em ) + 50px );
    }
    
    &:popover-open {
        display: flex;
        opacity: 1;
        transition-duration: 0.5s;
        transition-timing-function: var(--spring);
        translate: 10px -50%;
    }
    
    gap: 16px;
    border: 1px solid var(--bor);
    border-radius: 2em;
    padding: 2px 1em;
    margin: 0;
    overflow: hidden;
    
    background: bar(--bg);
    box-shadow: 
        hsl( from var(--shadow-color) h s l / 0.01 ) 0px 1px 1px -0.5px, 
        hsl( from var(--shadow-color) h s l / 0.02 ) 0px 2px 2px -1px, 
        hsl( from var(--shadow-color) h s l / 0.02 ) 0px 3px 3px -1.5px, 
        hsl( from var(--shadow-color) h s l / 0.01 ) 0px 5px 5px -2.5px;
}

@starting-style {
    #contrast-popover {
        &:popover-open {
            opacity: 0;
            translate: 10px -60%;
        }
    }
}

#contrast-slider {
    
    --pip-height: 7px;
    --slider-width: 70px;
    
    --range-slider: transparent;
    --range-handle-focus: var(--active-color);
    --range-pip: #f1f1f1;
    --range-pip-active: var(--active-color);
    --range-pip-hover: #ccc;
    
    margin: 0;
    padding: 0;
    
    .rangeSlider {
        min-height: 200px;
        width: var(--slider-width);
        margin: 0;
        display: block;
    }
    
    .rangeHandle {
        width: var(--slider-width);
        height: var(--pip-height);
        left: 50%;
        border-radius: 99vw;
        opacity: 0;
    }
    
    .rangePips.rsVertical {
        left: 0;
        width: 100%;
    }
    
    .rangePips .rsPip {
        
        --pip-shadow: hsl(0 0% 50% / 20%);
        
        width: 50%;
        left: 50%;
        height: var(--pip-height);
        border-radius: var(--pip-height);
        translate: -50% calc(var(--pip-height) / 2 );
        box-shadow: 0 1px 0px 0.5px var(--pip-shadow);
        
    }
    
    .rangePips .rsPip {

        --pip-height: 6px;
        width: calc( var(--slider-width) - 30px );
        
        &:has(+ .rsSelected),
        &.rsSelected+*{
            width: calc( var(--slider-width) - 20px );
            --pip-height: 7px;
        }
        
        &.rsSelected {
            --pip-height: 8px;
            height: var(--pip-height);
            width: var(--slider-width);
        }
        
        &:hover {
            --pip-shadow: hsl(0 0% 50% / 50%);
        }
        
    }
    
}


#contrast-popover {
    
    .contrast-buttons {
        display: flex;
        gap: 12px;
        flex-direction: column;
        justify-content: center;
        align-items: center;
    }
    
    .contrast-buttons button {
        
        display: flex;
        align-items: center;
        justify-content: center;
        padding: 0;
        border-radius: 100vw;
        width: 30px;
        aspect-ratio: 1;
        background: #e9e9e9;
        border: none;
        outline: none;
        box-shadow: 
            inset 0 0 0 1px hsl(0 0% 0% / 0.1),
            inset 0 2px 0.5px -0.5px hsl(0 0% 100% / 1),
            inset 0 -2px 0.5px -0.5px hsl(0 0% 0% / 0.05),
            0 2px 2px -0.5px hsl(0 0% 80% / 0.5);
        
    }
    
    .contrast-buttons button svg {
        height: 14px;
        width: auto;
    }
    
    .contrast-buttons span {
        font-family: fredoka;
        font-size: 26px;
        font-weight: 500;
        letter-spacing: 0.02em;
        padding: 0;
        width: 32px;
    }
    
}
















:root {
    
    color-scheme: light dark;
    
    --bg-light: hsl(220, 16%, 94%);
    --bg-light2: hsl(212, 50%, 92%);
    --bg-dark: hsl(222, 16%, 16%);
    --bg-dark2: hsl(222, 20%, 18%);
    --fg-light: hsl(212 22% 26%);
    --fg-dark: hsl(222, 39%, 95%);
    --link-light: hsl(222, 95%, 60%);
    --link-dark: hsl(222, 95%, 70%);
    --link-light-hover: hsl(150, 80%, 40%);
    --link-dark-hover: hsl(150, 95%, 70%);
    --input-bg-light: hsl(from var(--bg-light) h 15% 100%);
    --input-bg-dark: hsl(from var(--bg-dark) h 15% 10%);
    --input-border-light: hsl(from var(--bg-light) h 15% 85%);
    --input-border-dark: hsl(from var(--bg-light) h 15% 35%);
    --labels-light: hsl(from var(--fg-light) h 20% 55%);
    --labels-dark: hsl(from var(--fg-dark) h 20% 55%);
    
    /* color-scheme */
    --bg: light-dark( var(--bg-light), var(--bg-dark) );
    --bg2: light-dark( var(--bg-light2), var(--bg-dark2) );
    --fg: light-dark( var(--fg-light), var(--fg-dark) ) ;
    --link: light-dark( var(--link-light), var(--link-dark) );
    --linkh: light-dark( var(--link-light-hover), var(--link-dark-hover) );
    --labels: light-dark( var(--labels-light), var(--labels-dark) );  /* form labels */
    --b: light-dark( var(--input-bg-light), var(--input-bg-dark) ); /* form element backgrounds */
    --bor: light-dark( var(--input-border-light), var(--input-border-dark) ); /* form element shadows */
    --tint: light-dark( hsl(160, 85%, 60%), hsl(260, 85%, 60%) );
    --tint2: light-dark( hsl(200, 85%, 60%), hsl(300, 85%, 60%) );
    
    /* ease */
    --cubic: cubic-bezier(0.66, 0, 0.34, 1);
    --cubic-in: cubic-bezier(0.32, 0, 0.67, 0);
    --cubic-out: cubic-bezier(0.33, 1, 0.68, 1);
    --spring: linear(0, 0.008 1.1%, 0.034 2.3%, 0.134 4.9%, 0.264 7.3%, 0.683 14.3%, 0.797 16.5%, 0.89 18.6%, 0.967 20.7%, 1.027 22.8%, 1.073 25%, 1.104 27.3%, 1.123 30.6%, 1.119 34.3%, 1.018 49.5%, 0.988 58.6%, 0.985 65.2%, 1 84.5%, 1);
    
}

/** extra stuff **/

body, html, #app {
    display: grid;
    min-height: 100%;
    justify-content: center;
}

body {
    --dot-color: light-dark( 
        hsl( from var(--bg) h s calc(l - 7) / 90%),
        hsl( from var(--bg2) h s calc(l + 2) / 90%)
    );
    --bg-fade: light-dark(
        var(--bg2),
        var(--bg)
    );
    
    background-color: var(--bg2);
    background-image: 
        radial-gradient( var(--dot-color) 1.25px, transparent 0px ),
        linear-gradient(160deg, var(--bg), var(--bg-fade));
    background-repeat: repeat, no-repeat;
    background-size: 24px 24px, cover;
    background-position: center;
    min-width: 100svw;
    min-height: 100svh;
}

#app {
    display: flex;
    gap: 5vh;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    max-width: 420px;
}

#app > button {
    width: -webkit-max-content;
    width: -moz-max-content;
    width: max-content;
}

/* code {
    background: hsl( from color-mix(in oklch, var(--bg) 90%, var(--fg)) h s l / 50% );
    color: hsl( from var(--tint2) h 20% 50% );
} */

aside {
    opacity: 0.66;
}







































.arrow {
  position: fixed;
  left: 50%;
  top: 30%;
  fill: white;
  color: white;
  width: 40px;
  height: 40px;
  stroke: black;
  stroke-width: 20;
  translate: 0px 0px;
  filter: invert(1) drop-shadow(0 2px 3px rgba(0,0,0,0.25)) drop-shadow(0 4px 8px rgba(0,0,0,0.15));
  -webkit-animation: arrow 3.8s ease both;
          animation: arrow 3.8s ease both;
  z-index: 99;
}

@-webkit-keyframes arrow {
  0% {
    opacity: 0;
    translate: 10vw 10vh;
  }
  35%, 44% {
    scale: 1;
    translate: 1vw 10vh; 
    opacity: 1;
  }
  39% {
    scale: 0.75;
    translate: 0.5vw 9.5vh; 
  }
  73% {
    translate: -2vw 9vh; 
    opacity: 1;
  }
  100% {
    translate: -20vw -20vh;
    opacity: 0;
  }
}

@keyframes arrow {
  0% {
    opacity: 0;
    translate: 10vw 10vh;
  }
  35%, 44% {
    scale: 1;
    translate: 1vw 10vh; 
    opacity: 1;
  }
  39% {
    scale: 0.75;
    translate: 0.5vw 9.5vh; 
  }
  73% {
    translate: -2vw 9vh; 
    opacity: 1;
  }
  100% {
    translate: -20vw -20vh;
    opacity: 0;
  }
}