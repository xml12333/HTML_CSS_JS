- let o = 16, d, m;

- function getExtrusionMatrix(o)
	- let n = o*o, p = o + 1;
	- let a = new Array(n).fill(0);
	- return a.map((_, i) => +(!(i%p)))

svg(width='0' height='0')
	filter#back(color-interpolation-filters='sRGB')
		feTurbulence(baseFrequency='.0371 .0713' result='one')
		feTurbulence(baseFrequency='.173 .317')
		feDisplacementMap(in='one' scale='25' xChannelSelector='R')
		feDiffuseLighting(lighting-color='#4a7997' result='textured')
			feDistantLight(azimuth='90' elevation='50')
		
		feColorMatrix(in='SourceGraphic'
		              values=`0 0 0 0 .5 
		                      0 0 0 0 .5
													0 0 0 0 .5
													1 0 0 0 0` result='baseline')
		feComposite(in='textured' operator='in')
		feDropShadow(dx='0' dy='2')
		feBlend(in2='textured' result='textline')
		
		feGaussianBlur(in='baseline' stdDeviation='1')
		feOffset(dy='1')
		feComposite(in='baseline' operator='out')
		feBlend(in2='textline' mode='screen' result='stripe')
		feColorMatrix(in='SourceGraphic'
		              values=`0 0 0 0 .5 
		                      0 0 0 0 .85
													0 0 0 0 .95
													0 1 0 0 0`)
		feBlend(in2='stripe' mode='overlay')
		
	filter#extruded(color-interpolation-filters='sRGB' 
	                x='-50%' y='-50%' width='200%' height='200%')
		feColorMatrix(values=`0 0 0 0 .01 
		                      0 0 0 0 .085 
													0 0 0 0 .14 
													0 1 0 0 0` result='basegrad')
		feTurbulence(type='fractalNoise' baseFrequency='.5713')
		feDisplacementMap(in='basegrad' scale='64' 
		                  xChannelSelector='R' result='mixtgrad')
		feComponentTransfer(result='narrgrad')
			feFuncA(type='table' tableValues='-.5 1.5')
		feComponentTransfer(result='easegrad')
			feFuncA(type='gamma' exponent='1.35')
		feColorMatrix(in='SourceGraphic'
		              values=`0 0 0 0 0 
		                      0 0 0 0 .375 
													0 0 0 0 .515 
													0 0 1 0 0` result='basetext')
		feComposite(in='easegrad' operator='in')
		feBlend(in2='basetext' result='gradtext')
		feComposite(in2='gradtext' operator='in')
		feBlend(in2='gradtext' result='mixttext')
		feOffset(dx='2' dy='2')
		feGaussianBlur(stdDeviation='1')
		feComponentTransfer
			feFuncA(type='linear' slope='.8')
		feComposite(in='mixttext' operator='out')
		feBlend(in2='mixttext' mode='screen')
		feDropShadow(result='middtext')
		
		feColorMatrix(in='SourceGraphic'
		              values=`0 0 0 0 1 
		                      0 0 0 0 1 
													0 0 0 0 1 
													1 0 0 0 0` result='baseline')
		
		- m = getExtrusionMatrix(o), d = .5*o;
		feConvolveMatrix(order=o divisor='1' 
			               kernelMatrix=m.join(' '))
		feOffset(dx=d dy=d)
		feColorMatrix(values=`0 0 0 0 .85 
		                      0 0 0 0 .68 
													0 0 0 0 .26 
													0 0 0 1 0` result='extrbase')
		feComposite(in='easegrad' operator='in')
		feColorMatrix(values=`0 0 0 0 .48 
		                      0 0 0 0 .13 
													0 0 0 0 .13 
													0 0 0 1 0`)
		feBlend(in2='extrbase' result='extrgrad')
		
		feDropShadow(in='baseline' dx=0 dy=0 stdDeviation=d 
		             flood-color='#fffc')
		feComposite(in2='extrgrad' operator='in')
		feBlend(in2='extrgrad' mode='screen')
		feBlend(in='middtext')
		feDropShadow(dx=2*o dy=2*o stdDeviation=2*o flood-color='#000c')

div(contenteditable='true') dusty